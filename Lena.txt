Hello Lena! Good luck on your studies!

1.) Write a Java program to swap the value of two int variables, if the first number is 10 and the second number is 10.
	Before swap : Num1 = 11 
				  Num2 = 22

	Answer swap : Num1 = 22
				: Num2 = 11

Answer: 

public static int swap(int num1, int num2){
  int temp = 0;
   temp = num1;
   num1 = num2;
   num2 = temp;

	return num1,num2;

}




2.) Given an array like below, please print out this message:
	"LENA!"
	String[] letters = {"K","E","N","A","!"};

	*hint*(loop)

Answer:
    public class AnthonyPractice {

	public static void main(String[] args) {
		String[] letters = {"K","E","N","A","!"};
		String result = "";
		for (int i = 1; i < letters.length; i++) {
			result = result + letters[i];
	
			
		} System.out.print("L"+result);
	}
}




3.) Print all the numbers that are divisible by 4 from 1-100

	*hint*(loop)

Answer: 

public class AnthonyPractice {

	public static void main(String[] args) {
		
		for (int i = 1; i <= 100; i++) {
			if(i% 4==0) {
				System.out.println(i);
			}
			
		} 
	}
}





4.) Given a string, return a new string made of 3 copies of the first 2 chars of the original string. The string may be any length. If there are fewer than 2 chars, use whatever is there.


extraFront("Hello") → "HeHeHe"
extraFront("ab") → "ababab"
extraFront("H") → "HHH"

Answer: 
public String extraFront(String str) {

//Having difficulty at this question :( 
//Will try to figure it our later tonight.





5.) Ask user to enter 4 numbers ( use Scanner), and then tell them which number of the four is bigger

Answer:

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		System.out.println("Please enter 4  number");
		double num1 = scan.nextDouble();
		System.out.println("Please enter second number");
		double num2 = scan.nextDouble();
		System.out.println("Please enter third number");
		double num3 = scan.nextDouble();
		System.out.println("Please enter forth number");
		double num4 = scan.nextDouble();
		
		double[] numbers = {num1,num2,num3,num4};
		Double biggest = num1;
		for (double d : numbers) {
			if (biggest <= d) {
				biggest = d;
			} 
			
		} System.out.println(biggest);	
		scan.close();

	}

}





6.) Given two non-negative int values, return true if they have the same last digit, such as with 27 and 57. Note that the % "mod" operator computes remainders, so 17 % 10 is 7.


lastDigit(7, 17) → true
lastDigit(6, 17) → false
lastDigit(3, 113) → true

Answer: 
	public static boolean lastDigit(int i, int j) {

		if (i <= 10 && j >= 10) {
			return i == (j % 10);
		} else if (i <= 10 && j <= 10) {
			return i == j;
		} else if (i >= 10 && j >= 10) {
			return (i % 10) == (j % 10);
		} else if (i >= 10 && j <= 10) {
			return i % 10 == j;
		}
		return false;

	}

}

// for this one, I know there is definetely more easier answers, and I am eager to know them.
